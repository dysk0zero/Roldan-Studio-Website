---
import Webflow from "../assets/webflow.svg";
import {
  Rocket,
  Gauge,
  PiggyBank,
  Wrench,
  Files,
  Palette,
  PenTool,
  Search,
  Database,
  ShoppingCart,
  FileText,
  Settings,
  Layers,
  ShieldCheck,
  ArrowUpRight,
  ChartColumn,
  Pencil,
  Route,
  Headset,
  CodeXml,
  LayoutDashboard,
  CalendarCheck,
} from "@lucide/astro";
import ServicesCard from "./ServicesCard.astro";
import ServicesIconList from "./ServicesIconList.astro";

import type { ServiceVM } from "../types";
import { pair } from "../utils/pair";

const { t, cardDividers } = Astro.props;

const staticOutcomeIcons = [
  Rocket,
  Gauge,
  PiggyBank,
  Wrench,
  CalendarCheck,
  ArrowUpRight,
];
const staticFeatureIcons = [
  Files,
  Palette,
  PenTool,
  Route,
  Search,
  ChartColumn,
  Headset,
];
const staticDevIcons = [Webflow, CodeXml];

const dynamicOutcomeIcons = [
  Pencil,
  Gauge,
  ShoppingCart,
  Database,
  CalendarCheck,
  FileText,
];
const dynamicFeatureIcons = [
  Database,
  ShoppingCart,
  Files,
  Palette,
  PenTool,
  Route,
  Search,
  ChartColumn,
  Headset,
];
const dynamicDevIcons = [Webflow, CodeXml];

const customOutcomeIcons = [Settings, Layers, ShieldCheck, LayoutDashboard];
const customDevIcons = [CodeXml];

const staticOutcomes = pair(staticOutcomeIcons, t.static.outcomesList);
const staticFeatures = pair(staticFeatureIcons, t.static.featuresList);
const staticDev = pair(staticDevIcons, t.static.devList);

const dynamicOutcomes = pair(dynamicOutcomeIcons, t.dynamic.outcomesList);
const dynamicFeatures = pair(dynamicFeatureIcons, t.dynamic.featuresList);
const dynamicDev = pair(dynamicDevIcons, t.dynamic.devList);

const customOutcomes = pair(customOutcomeIcons, t.custom.outcomesList);
const customDev = pair(customDevIcons, t.custom.devList);


const services: ServiceVM[] = [
  {
    title: t.static.title,
    subtitle: t.static.subtitle,
    cta: t.static.cta,
    isCustom: Boolean(t.static.isCustom),
    outcomes: staticOutcomes,
    features: staticFeatures,
    dev: staticDev,
    price: t.static.pricing,
  },
  {
    title: t.dynamic.title,
    subtitle: t.dynamic.subtitle,
    cta: t.dynamic.cta,
    isCustom: Boolean(t.dynamic.isCustom),
    outcomes: dynamicOutcomes,
    features: dynamicFeatures,
    dev: dynamicDev,
    price: t.dynamic.pricing,
  },
  {
    title: t.custom.title,
    subtitle: t.custom.subtitle,
    cta: t.custom.cta,
    isCustom: Boolean(t.custom.isCustom),
    outcomes: customOutcomes,
    features: [],
    dev: customDev,
    price: t.custom.pricing,
  },
];
---

<div class="w-full light-bg bg-white">
  <div class="section-wrapper text-black">
    <section
      class="flex flex-col w-full items-center border-x border-black-line"
    >
      <header
        id="Services"
        class="section-header section-margin-top border-y border-black-line scroll-mt-16"
      >
        <h2
          class="intersect-once motion-delay-500 intersect:motion-preset-slide-up-lg motion-duration-[2s] mx-auto font-bold text-3xl lg:text-5xl xl:text-6xl leading-tight text-center text-shadow-header-black intersect:motion-opacity-in intersect-delay-300"
        >
          {t.header}
        </h2>
      </header>

      <div
        class="section-margin-bottom flex flex-col md:flex-row items-start w-full p-6 gap-6 xl:p-8 xl:gap-8 border-b border-black-line"
      >
        {
          services.map((svc) => (
            <ServicesCard
              title={svc.title}
              subtitle={svc.subtitle}
              cta={svc.cta}
              isCustom={svc.isCustom}
              t={cardDividers}
            >
              <ServicesIconList slot="outcomes" items={svc.outcomes} />

              <ServicesIconList
                slot="features"
                class="hidden md:flex-col"
                items={svc.features}
              />

              <ServicesIconList slot="dev" items={svc.dev} />

              <p
                slot="pricing"
                class="w-full text-center p-1 
                text-xl font-light tracking-wide text-gray-800"
              >
                <span>{svc.price}</span>
              </p>
            </ServicesCard>
          ))
        }
      </div>
    </section>
  </div>
</div>
